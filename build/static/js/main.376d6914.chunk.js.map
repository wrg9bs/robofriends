{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/CardList.js","components/Scroll.js","components/SearchBox.js","components/ErrorBoundary.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","props","name","email","id","className","alt","src","CardList","Robots","map","user","i","Scroll","style","overflowY","border","height","children","SearchBox","searchfield","searchChange","type","placeholder","onChange","ErrorBoundary","state","hasError","error","info","this","Component","App","useState","robots","setRobots","setSearchfield","useEffect","fetch","response","json","users","filteredRobots","filter","robot","toLocaleLowerCase","includes","toLowerCase","length","event","target","value","ReactDOM","render","document","getElementById"],"mappings":"iLAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,cCQCQ,EAbF,SAACC,GACV,IAAOC,EAAmBD,EAAnBC,KAAMC,EAAaF,EAAbE,MAAOC,EAAMH,EAANG,GACpB,OACI,sBAAKC,UAAW,uDAAhB,UACI,qBAAMC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,cACtB,gCACI,6BAAKF,IACL,4BAAIC,WCcLK,EAnBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAEf,OACI,8BAEIA,EAAOC,KAAI,SAACC,EAAMC,GACtB,OACI,cAAC,EAAD,CAEAR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCDFC,EATA,SAACZ,GACZ,OACI,qBAAKa,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACKhB,EAAMiB,YCSJC,EAZG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC7B,OACI,qBAAKhB,UAAU,MAAf,SACI,uBAAOA,UAAU,mCACjBiB,KAAK,SACLC,YAAY,gBACZC,SAAUH,O,oCCiBPI,E,kDAtBP,WAAYxB,GAAQ,IAAD,8BACf,cAAMA,IACDyB,MAAQ,CACTC,UAAU,GAHC,E,qDAMnB,SAAkBC,EAAOC,GACrBC,KAAKJ,MAAM,CAACC,UAAU,M,oBAE1B,WACI,OAAIG,KAAKJ,MAAMC,SACJ,yDAEJG,KAAK7B,MAAMiB,a,GAdFa,aC0CbC,EArCH,WAER,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAsCF,mBAAS,IAA/C,mBAAOb,EAAP,KAAoBgB,EAApB,KAEAC,qBAAU,WAENC,MAAM,8CACD5C,MAAK,SAAA6C,GAAQ,OAAIA,EAASC,UAC1B9C,MAAK,SAAA+C,GAAK,OAAIN,EAAUM,QAC9B,IACH,IAIMC,EAAiBR,EAAOS,QAAO,SAAAC,GAC7B,OAAOA,EAAM1C,KAAK2C,oBAAoBC,SAAS1B,EAAY2B,kBAEnE,OAAsB,IAAlBb,EAAOc,OACI,yCAGH,sBAAK3C,UAAU,KAAf,UACA,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWgB,aAbA,SAAC4B,GACxBb,EAAea,EAAMC,OAAOC,UAahB,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAU1C,OAASiC,Y,MC1B3CU,IAASC,OACG,cAAC,EAAD,IAASC,SAASC,eAAe,SAK7ChE,M","file":"static/js/main.376d6914.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\n\nconst Card = (props) => {\n    const {name, email, id} = props\n    return (\n        <div className= ' tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n            <img  alt='robots' src={`https://robohash.org/${id}?200x200`} />\n            <div>\n                <h2>{name}</h2>\n                <p>{email}</p>\n            </div>\n        </div>\n        \n    );\n}\nexport default Card","import React from 'react';\nimport Card from '../components/Card';\n\n\nconst CardList = ({Robots}) => {\n    \n    return (\n        <div>\n           {\n            Robots.map((user, i) => {\n        return (\n            <Card \n            key={i}\n            id={Robots[i].id} \n            name={Robots[i].name} \n            email={Robots[i].email}/>\n            );\n    }) \n           }\n        </div>\n    );\n}\n\nexport default CardList","import React from 'react';\n\nconst Scroll = (props) => {\n    return (\n        <div style={{overflowY: 'scroll', border: '1px solid black', height: '600px'}}>\n            {props.children}\n        </div>\n    );\n};\n\n\nexport default Scroll","import React from 'react';\n\nconst SearchBox = ({searchfield, searchChange}) => {\n    return (\n        <div className='pa2'>\n            <input className='pa3 ba b--green bg-lightest-blue'\n            type='search' \n            placeholder='search Robots' \n            onChange={searchChange}\n            />   \n        </div>\n        \n    )\n}\nexport default SearchBox;","import React, {Component} from 'react';\n\nclass ErrorBoundary extends Component {\n        constructor(props) {\n            super(props);\n            this.state = {\n                hasError: false\n            }\n        }\n        componentDidCatch(error, info) {\n            this.state({hasError: true})\n        }\n        render() {\n            if (this.state.hasError) {\n                return <h1>Ooops. That is not good</h1>\n            }\n            return this.props.children\n        }\n}\n\n\n\n\n\n\nexport default ErrorBoundary","import React, {useState, useEffect} from 'react';\nimport CardList from '../components/CardList';\nimport Scroll from '../components/Scroll';\nimport SearchBox from '../components/SearchBox';\nimport '../containers/app.css';\nimport ErrorBoundary from '../components/ErrorBoundary';\n\nconst App = () => {\n    \n    const [robots, setRobots] = useState([])\n    const [searchfield, setSearchfield] = useState('')\n   \n    useEffect(() => {\n       \n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response => response.json())\n            .then(users => setRobots(users));\n    }, [])\n    const onSearchChange = (event) => {\n    setSearchfield(event.target.value)         \n    }\n    \n    const filteredRobots = robots.filter(robot => {\n            return robot.name.toLocaleLowerCase().includes(searchfield.toLowerCase())\n     })\n    if (robots.length === 0) {\n            return <h1>Loading</h1>\n        } else {\n            return (\n                <div className='tc'>\n                <h1 className='f2'>ROBOFRIENDS</h1>\n                <SearchBox searchChange={onSearchChange}/>\n                <Scroll>\n                    <ErrorBoundary>\n                        <CardList Robots ={filteredRobots}/>\n                    </ErrorBoundary>\n                </Scroll>  \n            </div> \n            )\n        }\n        \n    \n    \n}\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App from './containers/App';\nimport'tachyons';\n\n\nReactDOM.render(\n            <App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}